name: Publish to Maven Central

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  publish:
    runs-on: self-hosted
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Verify Java version
      run: |
        java -version
        echo "JAVA_HOME=$JAVA_HOME"

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Determine version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "release" ]; then
          VERSION="${{ github.event.release.tag_name }}"
          VERSION="${VERSION#v}"  # Remove 'v' prefix if present
        elif [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ inputs.version }}"
        else
          VERSION="$(grep '^version' build.gradle | sed "s/.*'\(.*\)'.*/\1/")"
        fi
        echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
        echo "Publishing version: ${VERSION}"

    - name: Update version in build.gradle
      run: |
        VERSION="${{ steps.version.outputs.VERSION }}"
        sed -i "s/version = '.*'/version = '${VERSION}'/" build.gradle
        echo "Updated version to: ${VERSION}"
        grep "version = " build.gradle

    - name: Import GPG key
      env:
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      run: |
        echo "Importing GPG key..."
        echo "$GPG_PRIVATE_KEY" | gpg --batch --import
        gpg --list-secret-keys --keyid-format=long

    - name: Create gradle.properties
      run: |
        mkdir -p ~/.gradle
        cat > ~/.gradle/gradle.properties << EOF
        ossrhUsername=${{ secrets.OSSRH_USERNAME }}
        ossrhPassword=${{ secrets.OSSRH_PASSWORD }}
        signing.keyId=52EAF08A
        signing.password=${{ secrets.GPG_PASSWORD }}
        EOF
        echo "✓ gradle.properties created"

    - name: Build and test
      run: ./gradlew clean build -x integrationTest --console=plain

    - name: Publish to Maven Central
      env:
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
      run: |
        echo "Publishing to Maven Central..."
        ./gradlew publish --console=plain --stacktrace

    - name: Create release notes
      if: github.event_name == 'release'
      run: |
        VERSION="${{ steps.version.outputs.VERSION }}"
        echo "# Release v${VERSION}" > release-notes.md
        echo "" >> release-notes.md
        echo "## Published Modules" >> release-notes.md
        echo "" >> release-notes.md
        ./gradlew projects | grep -E "^(Project|---)" | grep -v "^---" | grep -v "^Project ':'" | sed 's/Project/- /' >> release-notes.md || echo "- All modules" >> release-notes.md
        echo "" >> release-notes.md
        echo "## Maven Coordinates" >> release-notes.md
        echo "" >> release-notes.md
        echo '```xml' >> release-notes.md
        echo '<dependency>' >> release-notes.md
        echo '    <groupId>io.github.cuihairu.redis-streaming</groupId>' >> release-notes.md
        echo '    <artifactId>MODULE_NAME</artifactId>' >> release-notes.md
        echo "    <version>${VERSION}</version>" >> release-notes.md
        echo '</dependency>' >> release-notes.md
        echo '```' >> release-notes.md
        echo "" >> release-notes.md
        echo "## Gradle" >> release-notes.md
        echo "" >> release-notes.md
        echo '```gradle' >> release-notes.md
        echo "implementation 'io.github.cuihairu.redis-streaming:MODULE_NAME:${VERSION}'" >> release-notes.md
        echo '```' >> release-notes.md

    - name: Upload release notes
      if: github.event_name == 'release'
      uses: actions/upload-artifact@v4
      with:
        name: release-notes
        path: release-notes.md
        retention-days: 90

    - name: Comment on release
      if: github.event_name == 'release' && success()
      uses: actions/github-script@v7
      with:
        script: |
          const version = '${{ steps.version.outputs.VERSION }}';
          const body = `✅ Successfully published version **${version}** to Maven Central!

          The artifacts will be available on Maven Central within a few hours:
          https://search.maven.org/search?q=g:io.github.cuihairu.redis-streaming

          ## Usage

          ### Maven
          \`\`\`xml
          <dependency>
              <groupId>io.github.cuihairu.redis-streaming</groupId>
              <artifactId>MODULE_NAME</artifactId>
              <version>${version}</version>
          </dependency>
          \`\`\`

          ### Gradle
          \`\`\`gradle
          implementation 'io.github.cuihairu.redis-streaming:MODULE_NAME:${version}'
          \`\`\`
          `;

          github.rest.repos.createReleaseComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: context.payload.release.id,
            body: body
          });

    - name: Notify on failure
      if: failure()
      run: |
        echo "❌ Publishing to Maven Central failed!"
        echo "Please check the logs for details."
