plugins {
    id 'java-library'
    id 'jacoco'
}

dependencies {
    implementation project(':reliability')
    api 'org.redisson:redisson:3.52.0'
    api 'com.fasterxml.jackson.core:jackson-databind:2.17.0'

    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    implementation 'org.slf4j:slf4j-api:1.7.36'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testImplementation 'org.mockito:mockito-core:4.6.1'

    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'
}

// Enable JUnit 5
tasks.withType(Test).configureEach {
    useJUnitPlatform()
}

jacoco {
    toolVersion = '0.8.10'
}

// Configure coverage aggregation for unit + integration tests in this module
tasks.named('jacocoTestReport', JacocoReport) {
    dependsOn tasks.withType(Test)
    reports {
        xml.required = true
        html.required = true
    }
    classDirectories.setFrom(fileTree(dir: "$buildDir/classes/java/main"))
    sourceDirectories.setFrom(files('src/main/java'))
    executionData.setFrom(fileTree(dir: buildDir, includes: ['jacoco/*.exec']))
    doFirst { executionData.files.removeIf { !it.exists() } }
}

tasks.withType(Test).configureEach {
    finalizedBy(tasks.named('jacocoTestReport'))
}
